{"version":3,"sources":["components/Header.js","context/CategoryContext.js","context/RecipesContext.js","components/Form.js","context/DetailsContext.js","components/Modal.js","components/Recipe.js","components/ListOfRecipes.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","CategoryContext","createContext","CategoryProvider","props","useState","category","setCategory","useEffect","a","axios","get","response","data","drinks","dataFromApi","Provider","value","children","RecipesContext","RecipesProvider","name","search","setSearch","recipes","setRecipes","replace","URL","Form","useContext","drink","setDrink","handleChange","event","target","onSubmit","preventDefault","type","placeholder","onChange","map","item","strCategory","key","DetailsContext","DetailsProvider","id","setId","detail","setDetail","console","log","modalElement","document","getElementById","forwardRef","ref","fade","defaultOpened","isOpen","setIsOpen","close","useCallback","useImperativeHandle","open","handleEscape","keyCode","addEventListener","removeEventListener","createPortal","onClick","role","aria-label","strDrink","strInstructions","src","strDrinkThumb","alt","ingredient","i","push","showIngredients","Recipe","setLoading","modal","useRef","loading","idDrink","current","ListOfRecipes","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.684ad37e.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header className=\"bg-success\">\r\n      <h1>Drink´s Recipe App</h1>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { createContext, useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nexport const CategoryContext = createContext();\r\n\r\nconst CategoryProvider = (props) => {\r\n  const [category, setCategory] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const URL = `https://www.thecocktaildb.com/api/json/v1/1/list.php?c=list`;\r\n    const dataFromApi = async () => {\r\n      const response = await axios.get(URL);\r\n      setCategory(response.data.drinks);\r\n    };\r\n    dataFromApi();\r\n  }, []);\r\n\r\n  return (\r\n    <CategoryContext.Provider value={{ category }}>\r\n      {props.children}\r\n    </CategoryContext.Provider>\r\n  );\r\n};\r\n\r\nexport default CategoryProvider;\r\n","import React, { createContext, useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport const RecipesContext = createContext();\r\n\r\nconst RecipesProvider = (props) => {\r\n  const [search, setSearch] = useState({ name: \"\", category: \"\" });\r\n  const [recipes, setRecipes] = useState([]);\r\n\r\n  let { name, category } = search;\r\n\r\n  category = category.replace(/ /g, \"_\");\r\n  const URL = `https://www.thecocktaildb.com/api/json/v1/1/filter.php?i=${name}&c=${category}`;\r\n\r\n  useEffect(() => {\r\n    if (name === \"\") return;\r\n    const dataFromApi = async () => {\r\n      const response = await axios.get(URL);\r\n      setRecipes(response.data.drinks);\r\n    };\r\n    dataFromApi();\r\n  }, [URL, name]);\r\n\r\n  return (\r\n    <RecipesContext.Provider value={{ setSearch, recipes }}>\r\n      {props.children}\r\n    </RecipesContext.Provider>\r\n  );\r\n};\r\n\r\nexport default RecipesProvider;\r\n","import React, { useContext, useState } from \"react\";\r\nimport { CategoryContext } from \"../context/CategoryContext\";\r\nimport { RecipesContext } from \"../context/RecipesContext\";\r\n\r\nconst Form = () => {\r\n  const { category } = useContext(CategoryContext);\r\n  const { setSearch } = useContext(RecipesContext);\r\n\r\n  const [drink, setDrink] = useState({});\r\n\r\n  const handleChange = (event) => {\r\n    setDrink({ ...drink, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    setSearch(drink);\r\n  };\r\n  return (\r\n    <form className=\"col-12\" onSubmit={handleSubmit}>\r\n      <fieldset>\r\n        <legend>Find drink´s recipe by category or ingredients</legend>\r\n      </fieldset>\r\n      <div className=\"row mt-4\">\r\n        <div className=\"col-md-4\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            name=\"name\"\r\n            placeholder=\"Ingredients\"\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <select\r\n            className=\"form-control\"\r\n            name=\"category\"\r\n            onChange={handleChange}\r\n          >\r\n            <option value=\"\">-- Select a category --</option>\r\n            {category.map((item) => (\r\n              <option value={item.strCategory} key={item.strCategory}>\r\n                {item.strCategory}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <input type=\"submit\" className=\"btn btn-block btn-primary\" />\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React, { createContext, useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nexport const DetailsContext = createContext();\r\n\r\nconst DetailsProvider = (props) => {\r\n  const [id, setId] = useState(null);\r\n  const [detail, setDetail] = useState({});\r\n\r\n  useEffect(() => {\r\n    const URL = `https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${id}`;\r\n    if (!id) return;\r\n    console.log(\"paso\");\r\n    const dataFromApi = async () => {\r\n      const response = await axios.get(URL);\r\n      setDetail(response.data.drinks[0]);\r\n    };\r\n    dataFromApi();\r\n  }, [id]);\r\n  console.log(detail);\r\n  return (\r\n    <DetailsContext.Provider value={{ id, setId, detail }}>\r\n      {props.children}\r\n    </DetailsContext.Provider>\r\n  );\r\n};\r\n\r\nexport default DetailsProvider;\r\n","import React, {\r\n  useEffect,\r\n  useImperativeHandle,\r\n  useState,\r\n  forwardRef,\r\n  useCallback,\r\n  useContext,\r\n} from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\nimport { DetailsContext } from \"../context/DetailsContext\";\r\n\r\nimport \"../style.css\";\r\n\r\nconst modalElement = document.getElementById(\"modal-root\");\r\n\r\nexport function Modal({ children, fade = false, defaultOpened = false }, ref) {\r\n  const [isOpen, setIsOpen] = useState(defaultOpened);\r\n\r\n  const close = useCallback(() => setIsOpen(false), []);\r\n\r\n  const { detail } = useContext(DetailsContext);\r\n  console.log(detail);\r\n\r\n  useImperativeHandle(\r\n    ref,\r\n    () => ({\r\n      open: () => setIsOpen(true),\r\n      close,\r\n    }),\r\n    [close]\r\n  );\r\n\r\n  const handleEscape = useCallback(\r\n    (event) => {\r\n      if (event.keyCode === 27) close();\r\n    },\r\n    [close]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (isOpen) document.addEventListener(\"keydown\", handleEscape, false);\r\n    return () => {\r\n      document.removeEventListener(\"keydown\", handleEscape, false);\r\n    };\r\n  }, [handleEscape, isOpen]);\r\n\r\n  const showIngredients = (detail) => {\r\n    console.log(\"hjk\");\r\n\r\n    let ingredient = [];\r\n    for (let i = 1; i < 16; i++) {\r\n      if (detail[`strIngredient${i}`]) {\r\n        ingredient.push(\r\n          <li>\r\n            {detail[`strIngredient${i}`]} {detail[`strMeasure${i}`]}\r\n          </li>\r\n        );\r\n      }\r\n    }\r\n    console.log(ingredient);\r\n    return ingredient;\r\n  };\r\n\r\n  return createPortal(\r\n    isOpen ? (\r\n      <div className={`modal ${fade ? \"modal-fade\" : \"\"}`}>\r\n        <div className=\"modal-overlay\" onClick={close} />\r\n        <span\r\n          role=\"button\"\r\n          className=\"modal-close\"\r\n          aria-label=\"close\"\r\n          onClick={close}\r\n        ></span>\r\n        <div className=\"modal-body\">\r\n          <h2>{detail.strDrink}</h2>\r\n          <h3 className=\"mt-4\">Instructions</h3>\r\n          <p>{detail.strInstructions}</p>\r\n          <img src={detail.strDrinkThumb} alt=\"\" className=\"img-fluid my-4\" />\r\n\r\n          <h3>Ingredients</h3>\r\n          <ul>{showIngredients(detail)}</ul>\r\n        </div>\r\n      </div>\r\n    ) : null,\r\n    modalElement\r\n  );\r\n}\r\n\r\nexport default forwardRef(Modal);\r\n","import React, { useContext, useRef, useState } from \"react\";\r\nimport { DetailsContext } from \"../context/DetailsContext\";\r\nimport Modal from \"./Modal\";\r\n\r\nconst Recipe = ({ item }) => {\r\n  const { setId } = useContext(DetailsContext);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const modal = useRef(null);\r\n\r\n  const handleClick = () => {\r\n    setId(item.idDrink);\r\n    modal.current.open();\r\n    setLoading(true);\r\n  };\r\n  return (\r\n    <div className=\"col-md-4 mb-3\">\r\n      <div className=\"card\">\r\n        <h2 className=\"card-header\">{item.strDrink}</h2>\r\n        <img\r\n          src={item.strDrinkThumb}\r\n          className=\"card-img-top\"\r\n          loading=\"lazy\"\r\n          alt={item.strDrink}\r\n        />\r\n        <div className=\"card-body\">\r\n          <button\r\n            onClick={handleClick}\r\n            type=\"button\"\r\n            className=\"btn btn-block btn-primary\"\r\n          >\r\n            See recipe\r\n          </button>\r\n          <Modal ref={modal}></Modal>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Recipe;\r\n","import React, { useContext } from \"react\";\r\nimport Recipe from \"./Recipe\";\r\nimport { RecipesContext } from \"../context/RecipesContext\";\r\n\r\nconst ListOfRecipes = () => {\r\n  const { recipes } = useContext(RecipesContext);\r\n  return (\r\n    <div className=\"row mt-5\">\r\n      {recipes.map((item) => (\r\n        <Recipe key={item.idDrink} item={item} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ListOfRecipes;\r\n","import React from \"react\";\nimport Header from \"./components/Header\";\nimport Form from \"./components/Form\";\nimport CategoryProvider from \"./context/CategoryContext\";\nimport RecipesProvider from \"./context/RecipesContext\";\nimport DetailsProvider from \"./context/DetailsContext\";\nimport ListOfRecipes from \"./components/ListOfRecipes\";\n\nfunction App() {\n  return (\n    <CategoryProvider>\n      <RecipesProvider>\n        <DetailsProvider>\n          <Header />\n          <div className=\"container mt-5\">\n            <div className=\"row\">\n              <Form />\n              <ListOfRecipes />\n            </div>\n          </div>\n        </DetailsProvider>\n      </RecipesProvider>\n    </CategoryProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./bootstrap.min.css\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}