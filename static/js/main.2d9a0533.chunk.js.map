{"version":3,"sources":["components/Header.js","context/CategoryContext.js","context/RecipesContext.js","components/Form.js","context/DetailsContext.js","components/Modal.js","components/Recipe.js","components/ListOfRecipes.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","CategoryContext","createContext","CategoryProvider","props","useState","category","setCategory","ingredient","setIngredient","useEffect","a","Promise","all","axios","responseI","responseC","data","drinks","dataFromApi","Provider","value","children","RecipesContext","RecipesProvider","search","setSearch","recipes","setRecipes","console","log","URL","get","response","Form","useContext","title","setTitle","handleChange","event","target","split","params","result","defaultValue","name","onChange","disabled","map","item","strIngredient1","key","strCategory","DetailsContext","DetailsProvider","id","setId","detail","setDetail","modalElement","document","getElementById","forwardRef","ref","fade","defaultOpened","isOpen","setIsOpen","close","useCallback","useImperativeHandle","open","handleEscape","keyCode","addEventListener","removeEventListener","createPortal","onClick","role","aria-label","strDrink","strInstructions","src","strDrinkThumb","alt","i","push","showIngredients","Recipe","setLoading","modal","useRef","loading","idDrink","current","type","ListOfRecipes","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.2d9a0533.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header className=\"bg-success\">\r\n      <h1>Drink´s Recipe App</h1>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { createContext, useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nexport const CategoryContext = createContext();\r\n\r\nconst CategoryProvider = (props) => {\r\n  const [category, setCategory] = useState([]);\r\n  const [ingredient, setIngredient] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const URLI = `https://www.thecocktaildb.com/api/json/v1/1/list.php?i=list`;\r\n    const URLC = `https://www.thecocktaildb.com/api/json/v1/1/list.php?c=list`;\r\n    const dataFromApi = async () => {\r\n      const [responseI, responseC] = await Promise.all([\r\n        axios(URLI),\r\n        axios(URLC),\r\n      ]);\r\n      setIngredient(responseI.data.drinks);\r\n      setCategory(responseC.data.drinks);\r\n      // setCategory(response.data.drinks);\r\n    };\r\n    dataFromApi();\r\n  }, []);\r\n\r\n  return (\r\n    <CategoryContext.Provider value={{ ingredient, category }}>\r\n      {props.children}\r\n    </CategoryContext.Provider>\r\n  );\r\n};\r\n\r\nexport default CategoryProvider;\r\n","import React, { createContext, useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport const RecipesContext = createContext();\r\n\r\nconst RecipesProvider = (props) => {\r\n  const [search, setSearch] = useState(null);\r\n  const [recipes, setRecipes] = useState([]);\r\n  console.log(search);\r\n  // category = category.replace(/ /g, \"_\");\r\n  const URL = `https://www.thecocktaildb.com/api/json/v1/1/filter.php?${search}`;\r\n\r\n  useEffect(() => {\r\n    if (search === null) return;\r\n    const dataFromApi = async () => {\r\n      const response = await axios.get(URL);\r\n      setRecipes(response.data.drinks);\r\n    };\r\n    dataFromApi();\r\n  }, [URL, search]);\r\n\r\n  return (\r\n    <RecipesContext.Provider value={{ setSearch, recipes }}>\r\n      {props.children}\r\n    </RecipesContext.Provider>\r\n  );\r\n};\r\n\r\nexport default RecipesProvider;\r\n","import React, { useContext, useState } from \"react\";\r\nimport { CategoryContext } from \"../context/CategoryContext\";\r\nimport { RecipesContext } from \"../context/RecipesContext\";\r\n\r\nconst Form = () => {\r\n  const { ingredient, category } = useContext(CategoryContext);\r\n  const { setSearch } = useContext(RecipesContext);\r\n  const [title, setTitle] = useState(\"\");\r\n\r\n  const handleChange = (event) => {\r\n    setSearch(event.target.value);\r\n    let [params, result] = event.target.value.split(\"=\");\r\n    if (params === \"i\") {\r\n      setTitle(`Result by ingredient ${result}`);\r\n    } else {\r\n      setTitle(`Result by category ${result}`);\r\n    }\r\n  };\r\n  return (\r\n    <form className=\"col-12\">\r\n      <fieldset>\r\n        <legend className=\"my-0 py-0 text-center\">\r\n          Find a drink´s recipe by ingredients or category\r\n        </legend>\r\n      </fieldset>\r\n      <div className=\"row mt-4\">\r\n        <div className=\"col-md-6\">\r\n          <select\r\n            defaultValue={\"DEFAULT\"}\r\n            className=\"form-control\"\r\n            name=\"name\"\r\n            onChange={handleChange}\r\n          >\r\n            <option value=\"DEFAULT\" disabled>\r\n              Choose an Ingredient ...\r\n            </option>\r\n            {ingredient.map((item) => (\r\n              <option\r\n                value={`i=${item.strIngredient1}`}\r\n                key={item.strIngredient1}\r\n              >\r\n                {item.strIngredient1}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n\r\n        <div className=\"col-md-6\">\r\n          <select\r\n            className=\"form-control\"\r\n            name=\"category\"\r\n            defaultValue={\"DEFAULT\"}\r\n            onChange={handleChange}\r\n          >\r\n            <option value=\"DEFAULT\" disabled>\r\n              Choose a category ...\r\n            </option>\r\n            {category.map((item) => (\r\n              <option value={`c=${item.strCategory}`} key={item.strCategory}>\r\n                {item.strCategory}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n        <h5 className=\"col-12  mt-3 mb-0 p-0\">{title}</h5>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React, { createContext, useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nexport const DetailsContext = createContext();\r\n\r\nconst DetailsProvider = (props) => {\r\n  const [id, setId] = useState(null);\r\n  const [detail, setDetail] = useState({});\r\n\r\n  useEffect(() => {\r\n    const URL = `https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${id}`;\r\n    if (!id) return;\r\n    console.log(\"paso\");\r\n    const dataFromApi = async () => {\r\n      const response = await axios.get(URL);\r\n      setDetail(response.data.drinks[0]);\r\n    };\r\n    dataFromApi();\r\n  }, [id]);\r\n  console.log(detail);\r\n  return (\r\n    <DetailsContext.Provider value={{ id, setId, detail }}>\r\n      {props.children}\r\n    </DetailsContext.Provider>\r\n  );\r\n};\r\n\r\nexport default DetailsProvider;\r\n","import React, {\r\n  useEffect,\r\n  useImperativeHandle,\r\n  useState,\r\n  forwardRef,\r\n  useCallback,\r\n  useContext,\r\n} from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\nimport { DetailsContext } from \"../context/DetailsContext\";\r\n\r\nimport \"../style.css\";\r\n\r\nconst modalElement = document.getElementById(\"modal-root\");\r\n\r\nexport function Modal({ children, fade = false, defaultOpened = false }, ref) {\r\n  const [isOpen, setIsOpen] = useState(defaultOpened);\r\n\r\n  const close = useCallback(() => setIsOpen(false), []);\r\n\r\n  const { detail } = useContext(DetailsContext);\r\n  console.log(detail);\r\n\r\n  useImperativeHandle(\r\n    ref,\r\n    () => ({\r\n      open: () => setIsOpen(true),\r\n      close,\r\n    }),\r\n    [close]\r\n  );\r\n\r\n  const handleEscape = useCallback(\r\n    (event) => {\r\n      if (event.keyCode === 27) close();\r\n    },\r\n    [close]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (isOpen) document.addEventListener(\"keydown\", handleEscape, false);\r\n    return () => {\r\n      document.removeEventListener(\"keydown\", handleEscape, false);\r\n    };\r\n  }, [handleEscape, isOpen]);\r\n\r\n  const showIngredients = (detail) => {\r\n    console.log(\"hjk\");\r\n\r\n    let ingredient = [];\r\n    for (let i = 1; i < 16; i++) {\r\n      if (detail[`strIngredient${i}`]) {\r\n        ingredient.push(\r\n          <li>\r\n            {detail[`strIngredient${i}`]} {detail[`strMeasure${i}`]}\r\n          </li>\r\n        );\r\n      }\r\n    }\r\n    console.log(ingredient);\r\n    return ingredient;\r\n  };\r\n\r\n  return createPortal(\r\n    isOpen ? (\r\n      <div className={`modal ${fade ? \"modal-fade\" : \"\"}`}>\r\n        <div className=\"modal-overlay\" onClick={close} />\r\n        <span\r\n          role=\"button\"\r\n          className=\"modal-close\"\r\n          aria-label=\"close\"\r\n          onClick={close}\r\n        ></span>\r\n        <div className=\"modal-body\">\r\n          <h2>{detail.strDrink}</h2>\r\n          <h3 className=\"mt-4\">Instructions</h3>\r\n          <p>{detail.strInstructions}</p>\r\n          <img src={detail.strDrinkThumb} alt=\"\" className=\"img-fluid my-4\" />\r\n\r\n          <h3>Ingredients</h3>\r\n          <ul>{showIngredients(detail)}</ul>\r\n        </div>\r\n      </div>\r\n    ) : null,\r\n    modalElement\r\n  );\r\n}\r\n\r\nexport default forwardRef(Modal);\r\n","import React, { useContext, useRef, useState } from \"react\";\r\nimport { DetailsContext } from \"../context/DetailsContext\";\r\nimport Modal from \"./Modal\";\r\n\r\nconst Recipe = ({ item }) => {\r\n  const { setId } = useContext(DetailsContext);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const modal = useRef(null);\r\n\r\n  const handleClick = () => {\r\n    setId(item.idDrink);\r\n    modal.current.open();\r\n    setLoading(true);\r\n  };\r\n  return (\r\n    <div className=\"col-md-4 mb-3\">\r\n      <div className=\"card\">\r\n        <h2 className=\"card-header\">{item.strDrink}</h2>\r\n        <img\r\n          src={item.strDrinkThumb}\r\n          className=\"card-img-top\"\r\n          loading=\"lazy\"\r\n          alt={item.strDrink}\r\n        />\r\n        <div className=\"card-body\">\r\n          <button\r\n            onClick={handleClick}\r\n            type=\"button\"\r\n            className=\"btn btn-block btn-primary\"\r\n          >\r\n            See recipe\r\n          </button>\r\n          <Modal ref={modal}></Modal>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Recipe;\r\n","import React, { useContext } from \"react\";\r\nimport Recipe from \"./Recipe\";\r\nimport { RecipesContext } from \"../context/RecipesContext\";\r\n\r\nconst ListOfRecipes = () => {\r\n  const { recipes } = useContext(RecipesContext);\r\n  return (\r\n    <div className=\"row mt-2\">\r\n      {recipes.map((item) => (\r\n        <Recipe key={item.idDrink} item={item} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ListOfRecipes;\r\n","import React from \"react\";\r\nimport Header from \"./components/Header\";\r\nimport Form from \"./components/Form\";\r\nimport CategoryProvider from \"./context/CategoryContext\";\r\nimport RecipesProvider from \"./context/RecipesContext\";\r\nimport DetailsProvider from \"./context/DetailsContext\";\r\nimport ListOfRecipes from \"./components/ListOfRecipes\";\r\n\r\nfunction App() {\r\n  return (\r\n    <CategoryProvider>\r\n      <RecipesProvider>\r\n        <DetailsProvider>\r\n          <Header />\r\n          <div className=\"container mt-5\">\r\n            <div className=\"row\">\r\n              <Form />\r\n              <ListOfRecipes />\r\n            </div>\r\n          </div>\r\n        </DetailsProvider>\r\n      </RecipesProvider>\r\n    </CategoryProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./bootstrap.min.css\";\r\n\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}